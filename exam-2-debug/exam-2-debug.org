#+ASSIGNMENT: exam-2-debug
#+POINTS: 4
#+CATEGORY: exam2
#+RUBRIC: (("technical" . 0.7) ("presentation" . 0.3))
#+DUEDATE: <2015-11-04 Wed 10:20>

The gas phase reaction $\ce{A + 2B -> 2D}$ is carried out in an isothermal, plug-flow reactor at 5 atm. Species A, B and an inert I is fed to the reactor at 50 L/min at 328 K. The mole fraction of the inlet streams are:

| x_A | 0.2 |
| x_B | 0.5 |
| x_I | 0.3 |

The reaction rate is $r = 2.5 C_A^{0.5} C_B$ mol/(L min)

a) Plot the volumetric flow in the reactor as a function of the reactor volume from V = 0L to 50L. Comment on whether your result makes sense.


Fix all of the errors in this code block. You will know it is correct when your figure plots, and looks like the one provided below.

#+BEGIN_SRC python
import numpy as np
from scipy.integrate import odeint
import matplotlib.pyplot as plt

R = 0.08205746 # L atm / (K mol)
P0 = 5.0       # atm
T = 328        # K
v0 = 50.0      # L / min
Ft0= P0*v0/(R*T) # Calculating the initial molar flow rate

Fa0= 0.2*Ft0
Fb0= 0.5*Ft0
Fi0= 0.3*Ft0

# defining the function
def ode(F,V):
   Fa,Fb,Fd,y = F   # unpacking the arrays
   Ft= sum(F)

   v=v0* Ft/Ft0

   Ca= Pa*Ft/Ft0*P0
   Cb= Fb/v

   r=2.5*(Ca^0.5) * Cb
   ra=-r
   rb=-2*r
   rd=2*r

   dfadv= ra
   dfbdv= rb
   dfddv= rd

   return[ dfadv,dfbdv,dfdv]

Vspan= np.linspace(0,50)

F0=[Fa0,Fb0,Fd0]
print ode(F0, 0

sol= odeint(ode,F0,Vspan) # solving the ODE

Faexit= sol[-1,0]
Fbexit=sol[-1,1]
Fdexit=sol[-1,2]

Ftexit= Faexit+Fbexit+Fdexit+Fi0  # Computing the total molar flow rate

vexit= v0*Ftexit/Ft0

conva= (Fa0-Faexit)/Fa0

v = v0 * (np.sum(sol, 1) + Fi0) / Ft0
plt.plot(Vspan, v)
plt.savefig('quiz-2.png')
# [[.\quiz-2.png]]


#+END_SRC

#+RESULTS:


The solution should look like this:
[[./soln.png]]


The code after debug is as follows:

#+BEGIN_SRC python
import numpy as np
from scipy.integrate import odeint
import matplotlib.pyplot as plt
R = 0.08205746 # L atm / (K mol)
P0 = 5.0       # atm
T = 328        # K
v0 = 50.0      # L / min
Ft0= P0*v0/(R*T) # Calculating the initial molar flow rate

Fa0= 0.2*Ft0
Fb0= 0.5*Ft0
Fi0= 0.3*Ft0
Fd0 = 0
# defining the function
def ode(F,V):
   Fa,Fb,Fd = F   # unpacking the arrays
   Ft= sum(F)+Fi0

   v=v0* Ft/Ft0

   Ca= Fa/v
   Cb= Fb/v

   r=2.5*(Ca**0.5) * Cb
   ra=-r
   rb=-2*r
   rd=2*r

   dfadv= ra
   dfbdv= rb
   dfddv= rd

   return[ dfadv,dfbdv,dfddv]

Vspan= np.linspace(0,50)

F0=[Fa0,Fb0,Fd0]
print ode(F0, 0)

sol= odeint(ode,F0,Vspan) # solving the ODE

Faexit= sol[-1,0]
Fbexit=sol[-1,1]
Fdexit=sol[-1,2]

Ftexit= Faexit+Fbexit+Fdexit+Fi0  # Computing the total molar flow rate

vexit= v0*Ftexit/Ft0

conva= (Fa0-Faexit)/Fa0

v = v0 * (np.sum(sol, 1) + Fi0) / Ft0
plt.plot(Vspan, v)
plt.xlabel('V(L)')
plt.ylabel('Volumetric Flow (L/min)')
plt.savefig('figure1.png')
#[[./figure1.png]]
#+END_SRC

#+RESULTS:
: [-0.04476021327399023, -0.08952042654798047, 0.08952042654798047]

#+TURNED-IN: Wed Nov  4 10:18:45 2015

* feedback
[[elisp:(goto-char 2820)][(jkitchin) line 147:]] / here

[[elisp:(goto-char 2923)][(jkitchin) line 151:]] no discussion


* Grade
#+technical: B
#+presentation: A
#+GRADE: 0.760
#+GRADED-BY: John Kitchin
