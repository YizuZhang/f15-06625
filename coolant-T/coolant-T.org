#+ASSIGNMENT: coolant-T
#+POINTS: 2
#+CATEGORY: participation
#+RUBRIC: (("participation" . 1.0))
#+DUEDATE: <2015-11-23 Mon>


For the example in [[id:B46A4A40-6C8B-425E-BD2C-7D9F2611B738][Batch with heat exchanger]], find the coolant temperature that will prevent the maximum temperature from exceeding 373K. Do this as quantitatively as you can.

#+BEGIN_SRC python
import numpy as np
from scipy.integrate import odeint

V = 1200.0 # L
T0 = 273.15 + 27
CA0 = CB0 = 2.0
CC0 = 0.0

cpa = cpb = 20.0  # cal/mol/K
cpc = 40.0        # cal/mol/K

k0 = 0.01725    # L / mol / min at 27 degC
E = 1500.0     # cal/mol
R = 1.987       # cal/mol/K
dH = -10000.0  # cal/mol

Ua = 5000.0  # overall heat transfer coefficient
Tcoolant = 29.06 + 273.15  # coolant temperature

def batch(Y, t, Tcoolant):
    na, T = Y
    xi = (na - CA0*V) / -1.0
    nb = CB0 * V - xi
    nc = CC0 * V + xi

    Ca = na / V
    Cb = nb / V
    k = k0 * np.exp(-E / R * (1.0 / T - 1.0 / T0))
    r = k * Ca * Cb
    ra = -r

    Qdot = Ua*(Tcoolant - T)

    dnadt = ra * V
    dTdt = (-dH * r * V + Qdot)/(na * cpa + nb * cpb + nc * cpc)
    return [dnadt, dTdt]


Y0 = [V * CA0, T0]

tspan = np.linspace(0, 200, 500)

def obj(Tcool):
    sol = odeint(batch,Y0,tspan, args = (Tcool,))
    return max(sol[:,1]-373)
from scipy.optimize import fsolve
sol, =fsolve(obj,300)
print ('When the coolant temperature is {0}K, the maximum temperature reaches 373K'.format(sol))

#+END_SRC

#+RESULTS:
: When the coolant temperature is 301.999013908K, the maximum temperature reaches 373K

#+TURNED-IN: Mon Nov 23 09:49:00 2015

* Grade
#+participation: P
#+GRADE: 1.000
#+GRADED-BY: John Kitchin
